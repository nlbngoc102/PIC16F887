CCS PCM C Compiler, Version 5.015, 5967               04-Thg8-24 23:49

               Filename:   C:\Users\Admin\Documents\NN_VXL_KTS\N\RV_SE\HK1_15-16\CAU3_VDKB.lst

               ROM used:   216 words (3%)
                           Largest free fragment is 2048
               RAM used:   15 (4%) at main() level
                           17 (5%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   072
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.5
001A:  GOTO   01D
001B:  BTFSC  0C.5
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   03F
.................... #include<16f887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
0031:  BCF    0A.0
0032:  BCF    0A.1
0033:  BCF    0A.2
0034:  ADDWF  02,F
0035:  RETLW  C0
0036:  RETLW  F9
0037:  RETLW  A4
0038:  RETLW  B0
0039:  RETLW  99
003A:  RETLW  92
003B:  RETLW  82
003C:  RETLW  F8
003D:  RETLW  80
003E:  RETLW  90
*
005D:  MOVF   2A,W
005E:  CLRF   78
005F:  SUBWF  29,W
0060:  BTFSC  03.0
0061:  GOTO   065
0062:  MOVF   29,W
0063:  MOVWF  77
0064:  GOTO   071
0065:  CLRF   77
0066:  MOVLW  08
0067:  MOVWF  2B
0068:  RLF    29,F
0069:  RLF    77,F
006A:  MOVF   2A,W
006B:  SUBWF  77,W
006C:  BTFSC  03.0
006D:  MOVWF  77
006E:  RLF    78,F
006F:  DECFSZ 2B,F
0070:  GOTO   068
0071:  RETURN
....................  
.................... #list 
....................  
....................  
.................... #fuses hs 
.................... #use delay (clock =20M) 
*
0047:  MOVLW  29
0048:  MOVWF  04
0049:  BCF    03.7
004A:  MOVF   00,W
004B:  BTFSC  03.2
004C:  GOTO   05A
004D:  MOVLW  06
004E:  MOVWF  78
004F:  CLRF   77
0050:  DECFSZ 77,F
0051:  GOTO   050
0052:  DECFSZ 78,F
0053:  GOTO   04F
0054:  MOVLW  7B
0055:  MOVWF  77
0056:  DECFSZ 77,F
0057:  GOTO   056
0058:  DECFSZ 00,F
0059:  GOTO   04D
005A:  BCF    0A.3
005B:  BCF    0A.4
005C:  GOTO   0AD (RETURN)
.................... #use rs232(baud = 9600, xmit=pin_c6,rcv = pin_c7) 
....................  
.................... unsigned int8 nhan; 
....................  
.................... const unsigned int8 ma7doan[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90}; 
....................  
.................... void main() 
*
0072:  MOVF   03,W
0073:  ANDLW  1F
0074:  MOVWF  03
0075:  BSF    03.5
0076:  BSF    03.6
0077:  BSF    07.3
0078:  MOVLW  08
0079:  BCF    03.6
007A:  MOVWF  19
007B:  MOVLW  02
007C:  MOVWF  1A
007D:  MOVLW  A6
007E:  MOVWF  18
007F:  MOVLW  90
0080:  BCF    03.5
0081:  MOVWF  18
0082:  MOVLW  FF
0083:  MOVWF  28
0084:  BSF    03.5
0085:  BSF    03.6
0086:  MOVF   09,W
0087:  ANDLW  C0
0088:  MOVWF  09
0089:  BCF    03.6
008A:  BCF    1F.4
008B:  BCF    1F.5
008C:  MOVLW  00
008D:  BSF    03.6
008E:  MOVWF  08
008F:  BCF    03.5
0090:  CLRF   07
0091:  CLRF   08
0092:  CLRF   09
0093:  BCF    03.7
.................... { 
....................    set_tris_a(0x01); 
0094:  MOVLW  01
0095:  BSF    03.5
0096:  BCF    03.6
0097:  MOVWF  05
....................    set_tris_b(0); 
0098:  MOVLW  00
0099:  MOVWF  06
....................    set_tris_c(0x80); 
009A:  MOVLW  80
009B:  MOVWF  07
009C:  BCF    03.5
009D:  MOVWF  28
....................    set_tris_d(0); 
009E:  MOVLW  00
009F:  BSF    03.5
00A0:  MOVWF  08
....................    enable_interrupts(int_rda); 
00A1:  BSF    0C.5
....................    enable_interrupts(global); 
00A2:  MOVLW  C0
00A3:  BCF    03.5
00A4:  IORWF  0B,F
....................     
....................    while(true) 
....................    { 
....................       if(!input(pin_a0)) 
00A5:  BSF    03.5
00A6:  BSF    05.0
00A7:  BCF    03.5
00A8:  BTFSC  05.0
00A9:  GOTO   0BC
....................       { 
....................          delay_ms(20); 
00AA:  MOVLW  14
00AB:  MOVWF  29
00AC:  GOTO   047
....................          if(!input(pin_a0)) 
00AD:  BSF    03.5
00AE:  BSF    05.0
00AF:  BCF    03.5
00B0:  BTFSC  05.0
00B1:  GOTO   0BC
....................          { 
....................             putc(0);           
00B2:  MOVLW  00
00B3:  BTFSS  0C.4
00B4:  GOTO   0B3
00B5:  MOVWF  19
....................             nhan = 0; 
00B6:  CLRF   27
....................             while(!input(pin_a0)); 
00B7:  BSF    03.5
00B8:  BSF    05.0
00B9:  BCF    03.5
00BA:  BTFSS  05.0
00BB:  GOTO   0B7
....................          } 
....................       } 
....................       output_d(ma7doan[nhan/10]); 
00BC:  MOVF   27,W
00BD:  MOVWF  29
00BE:  MOVLW  0A
00BF:  MOVWF  2A
00C0:  CALL   05D
00C1:  MOVF   78,W
00C2:  CALL   031
00C3:  MOVWF  29
00C4:  BSF    03.5
00C5:  CLRF   08
00C6:  BCF    03.5
00C7:  MOVF   29,W
00C8:  MOVWF  08
....................       output_b(ma7doan[nhan%10]); 
00C9:  MOVF   27,W
00CA:  MOVWF  29
00CB:  MOVLW  0A
00CC:  MOVWF  2A
00CD:  CALL   05D
00CE:  MOVF   77,W
00CF:  CALL   031
00D0:  MOVWF  29
00D1:  BSF    03.5
00D2:  CLRF   06
00D3:  BCF    03.5
00D4:  MOVF   29,W
00D5:  MOVWF  06
00D6:  GOTO   0A5
....................     
....................    } 
.................... } 
....................  
.................... #int_rda 
.................... void ngatnhan() 
00D7:  SLEEP
.................... { 
....................    nhan = getc(); 
*
003F:  BTFSS  0C.5
0040:  GOTO   03F
0041:  MOVF   1A,W
0042:  MOVWF  27
0043:  BCF    0C.5
0044:  BCF    0A.3
0045:  BCF    0A.4
0046:  GOTO   01D
.................... } 
....................  
....................  
....................  
....................  

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
